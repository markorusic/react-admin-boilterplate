import fs from 'fs'
import { join } from 'path'
import prettier from 'prettier'
import translations from '../src/lang/en.json'

const keys: string[] = []

type TranslationRecord = {
  [P in string]: string | TranslationRecord
}

const _traverseTranslations = (obj: TranslationRecord, path: string[]) => {
  Object.keys(obj).forEach(key => {
    if (key.startsWith('_')) {
      return
    }
    const objOrString = obj[key]
    if (typeof objOrString === 'string') {
      keys.push([...path, key].join('.'))
    } else {
      _traverseTranslations(objOrString, [...path, key])
    }
  })
}

const traverseTranslations = () => {
  _traverseTranslations(translations, [])
  return keys
}

const s = `
// this is autogenerated by running \`npm run gen:i18:keys\`
export type TranslationKeys =
${traverseTranslations()
  .map(k => `  "${k}"`)
  .join('|\n')}
`

fs.writeFileSync(
  join(__dirname, '../src/core/localization/translation-keys.ts'),
  prettier.format(s, { parser: 'babel', useTabs: true })
)
